<%# Answer Variable => Ruby Variable Translation -%>
<%
  @console_ssl_listen_port = ENV['q_puppet_enterpriseconsole_httpd_port']
  @certname         = ENV['q_puppetagent_certname']
  #These passwords will be set to nil on upgrades meaning that we won't manage them
  @classifier_database_password = ENV['q_classifier_database_password']
  @rbac_database_password = ENV['q_rbac_database_password']
  @activity_database_password = ENV['q_activity_database_password']

  @master_certname  = ENV['q_puppetmaster_certname']
  @classifier_database_name     = ENV['q_classifier_database_name']
  @classifier_database_user     = ENV['q_classifier_database_user']
  @rbac_database_name     = ENV['q_rbac_database_name']
  @rbac_database_user     = ENV['q_rbac_database_user']
  @activity_database_name     = ENV['q_activity_database_name']
  @activity_database_user     = ENV['q_activity_database_user']
-%>
class { puppet_enterprise::profile::console :
  console_ssl_listen_port => '<%= @console_ssl_listen_port -%>',
  master_certname    => '<%= @master_certname -%>',
  <%# If it's not a PE database (either this is the database node or the PuppetDB node is), disable SSL -%>
  <% if ENV['q_database_install'] != 'y' && ENV['q_puppetdb_hostname'] != ENV['q_database_host'] -%>
    database_properties => '',
  <% end -%>
  certname           => '<%= @certname -%>',
  classifier_database_name     => '<%= @classifier_database_name -%>',
  classifier_database_user     => '<%= @classifier_database_user -%>',
  classifier_database_password => '<%= @classifier_database_password -%>',
  rbac_database_name     => '<%= @rbac_database_name -%>',
  rbac_database_user     => '<%= @rbac_database_user -%>',
  rbac_database_password => '<%= @rbac_database_password -%>',
  activity_database_name     => '<%= @activity_database_name -%>',
  activity_database_user     => '<%= @activity_database_user -%>',
  activity_database_password => '<%= @activity_database_password -%>',
  <% if ENV['t_console_services_java_args'] -%>
  java_args => <%= Hash[*ENV['t_console_services_java_args'].split.to_a] -%>,
  <% end -%>
}
<% if ENV['q_database_install'] == 'y' && ENV['q_all_in_one_install'] == 'y' -%>
service { 'pe-postgresql':
        ensure => running,
        before => Service['pe-console-services'],
}
<% end -%>

class { puppet_enterprise::profile::agent: }
